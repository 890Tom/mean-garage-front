{"ast":null,"code":"import { ElementRef, EventEmitter, NgZone } from '@angular/core';\nimport { DattaConfig } from 'src/app/app-config';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../navigation\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ngx-scrollbar\";\nimport * as i4 from \"./nav-collapse/nav-collapse.component\";\nimport * as i5 from \"./nav-group/nav-group.component\";\nimport * as i6 from \"./nav-item/nav-item.component\";\nconst _c0 = [\"navbarContent\"];\nconst _c1 = [\"navbarWrapper\"];\nfunction NavContentComponent_ng_scrollbar_0_ng_container_3_app_nav_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-nav-group\", 8);\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", item_r2);\n  }\n}\nfunction NavContentComponent_ng_scrollbar_0_ng_container_3_app_nav_collapse_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-nav-collapse\", 8);\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", item_r2);\n  }\n}\nfunction NavContentComponent_ng_scrollbar_0_ng_container_3_app_nav_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-nav-item\", 8);\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"item\", item_r2);\n  }\n}\nfunction NavContentComponent_ng_scrollbar_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NavContentComponent_ng_scrollbar_0_ng_container_3_app_nav_group_1_Template, 1, 1, \"app-nav-group\", 7);\n    i0.ɵɵtemplate(2, NavContentComponent_ng_scrollbar_0_ng_container_3_app_nav_collapse_2_Template, 1, 1, \"app-nav-collapse\", 7);\n    i0.ɵɵtemplate(3, NavContentComponent_ng_scrollbar_0_ng_container_3_app_nav_item_3_Template, 1, 1, \"app-nav-item\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.type == \"group\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.type == \"collapse\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.type == \"item\");\n  }\n}\nfunction NavContentComponent_ng_scrollbar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ng-scrollbar\", 1)(1, \"div\", 2)(2, \"ul\", 3);\n    i0.ɵɵlistener(\"clickOutside\", function NavContentComponent_ng_scrollbar_0_Template_ul_clickOutside_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.fireOutClick());\n    })(\"mouseleave\", function NavContentComponent_ng_scrollbar_0_Template_ul_mouseleave_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.navMob());\n    });\n    i0.ɵɵtemplate(3, NavContentComponent_ng_scrollbar_0_ng_container_3_Template, 4, 3, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.navigation);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"v\", ctx_r0.currentApplicationVersion, \"\");\n  }\n}\nexport let NavContentComponent = /*#__PURE__*/(() => {\n  class NavContentComponent {\n    constructor(nav, zone, location) {\n      this.nav = nav;\n      this.zone = zone;\n      this.location = location;\n      // version\n      this.title = 'Demo application for version numbering';\n      this.currentApplicationVersion = environment.appVersion;\n      this.onNavCollapsedMob = new EventEmitter();\n      this.config = DattaConfig;\n      this.windowWidth = window.innerWidth;\n      this.navigation = this.nav.get();\n      this.scrollWidth = 0;\n      this.contentWidth = 0;\n    }\n    ngOnInit() {\n      if (this.windowWidth < 992) {\n        this.config['layout'] = 'vertical';\n        setTimeout(() => {\n          document.querySelector('.pcoded-navbar').classList.add('menupos-static');\n          document.querySelector('#nav-ps-datta').style.maxHeight = '100%';\n        }, 500);\n      }\n    }\n    navMob() {\n      if (this.windowWidth < 992 && document.querySelector('app-navigation.pcoded-navbar').classList.contains('mob-open')) {\n        this.onNavCollapsedMob.emit();\n      }\n    }\n    fireOutClick() {\n      let current_url = this.location.path();\n      if (this.location['_baseHref']) {\n        current_url = this.location['_baseHref'] + this.location.path();\n      }\n      const link = \"a.nav-link[ href='\" + current_url + \"' ]\";\n      const ele = document.querySelector(link);\n      if (ele !== null && ele !== undefined) {\n        const parent = ele.parentElement;\n        const up_parent = parent.parentElement.parentElement;\n        const last_parent = up_parent.parentElement;\n        if (parent.classList.contains('pcoded-hasmenu')) {\n          if (DattaConfig.layout === 'vertical') {\n            parent.classList.add('pcoded-trigger');\n          }\n          parent.classList.add('active');\n        } else if (up_parent.classList.contains('pcoded-hasmenu')) {\n          if (DattaConfig.layout === 'vertical') {\n            up_parent.classList.add('pcoded-trigger');\n          }\n          up_parent.classList.add('active');\n        } else if (last_parent.classList.contains('pcoded-hasmenu')) {\n          if (DattaConfig.layout === 'vertical') {\n            last_parent.classList.add('pcoded-trigger');\n          }\n          last_parent.classList.add('active');\n        }\n      }\n    }\n  }\n  NavContentComponent.ɵfac = function NavContentComponent_Factory(t) {\n    return new (t || NavContentComponent)(i0.ɵɵdirectiveInject(i1.NavigationItem), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Location));\n  };\n  NavContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavContentComponent,\n    selectors: [[\"app-nav-content\"]],\n    viewQuery: function NavContentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navbarContent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navbarWrapper = _t.first);\n      }\n    },\n    outputs: {\n      onNavCollapsedMob: \"onNavCollapsedMob\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"style\", \"height: calc(100vh - 70px)\", \"exclude\", \"'#mobile-collapse1'\", \"visibility\", \"hover\", 4, \"ngIf\"], [\"exclude\", \"'#mobile-collapse1'\", \"visibility\", \"hover\", 2, \"height\", \"calc(100vh - 70px)\"], [1, \"navbar-content\"], [1, \"nav\", \"pcoded-inner-navbar\", 3, \"clickOutside\", \"mouseleave\"], [4, \"ngFor\", \"ngForOf\"], [1, \"version\"], [\"disabled\", \"\", 1, \"pe-auto\"], [3, \"item\", 4, \"ngIf\"], [3, \"item\"]],\n    template: function NavContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, NavContentComponent_ng_scrollbar_0_Template, 7, 2, \"ng-scrollbar\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.config[\"layout\"] === \"vertical\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.NgScrollbar, i4.NavCollapseComponent, i5.NavGroupComponent, i6.NavItemComponent]\n  });\n  return NavContentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}